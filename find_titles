#!/bin/bash

dntn() {
	local ifs=$IFS
	local IFS=$IFS$'-'
	local -i dn=0
	local -i m=0 d=0 n=0 current=$1 total=0
	for d in $THREE; do
		let dn++
		for t in $(seq $d); do
			htn[$dn]=$t
		done
	done
	n=0
	dn=0
	for d in $THREE; do
		let dn++
		for tn in $(seq ${htn[$dn]}); do
			let n++		
			if [ $n -ge $current ]; then
				dt=`printf '%01d%02d' $dn $tn`
				break 2
			fi
		done
	done
	echo $dt
}




find_titles() {
	local -i n=0 nn=0 
	local tmpvar='' no='' IFS=$'\n'
	textlines=''
	textfile="$1"

	t1=`grep -c -E 't[[:digit:]]{1,3}' $textfile`
	t2=`grep -c -E '^\ *[[:digit:]]{1,3}\.?\ ?' $textfile`

	tmpvar=`grep  -E '^\ *(d[[:digit:]]{1,2})?t?[[:digit:]]+[\ -\.]?'  $textfile`
	
	tmpvar=`echo "$tmpvar"|grep -v -E "[[:digit:]]\/[[:digit:]]"`
	tmpvar=`echo "$tmpvar"|grep -v '.wav'|grep -v '.flac'|grep -v '(totals for'`
	for line in ${tmpvar}; do 
		
		
		if [ $t1 -gt  $t2 ]; then
			line=`echo "$line"|sed -r "s/^\s*(d[[:digit:]])?t[[:digit:]]{1,3}[\ \-\.]?\ *\.?\ *//"`
		else
			line=`echo "$line"|sed -nr "s/^\s*[[:digit:]]+[\.|\-]?[\s+|\-]?\-?\ ?(.*)/\1/p"`
		fi	
		

		# remove anything within square braces, and the braces		
		line=`echo "$line"|sed -r 's/\[.*\]//'`


		line=`echo "$line"|sed -r 's/^[[:digit:]]{1,3}//'`


		line=`echo "$line"|sed -r "s/\.[[:digit:]]{2,3}//"` 


		line=`echo "$line"|sed -r 's/\)//'`


		line=`echo "$line"|sed -r 's/[[:digit:]]{1,2}-[[:digit:]]{1,3}//'`

		
		line=`echo "$line"|sed -r "s/\(?[[:digit:]]{1,3}\:[[:digit:]]{1,3}\)?//"`
		

		line=`echo "$line"|sed -r 's/^d?[[:digit:]]*t[[:digit:]]*\s*\-*//'`
		# remove dash at the start of a title, spaces will take care of themselves
		line=`echo "$line"|sed -r 's/^-//'`
		# filter out md5 lines
		line=`echo "$line"|grep -Ev '[0123456789abcdef]{4,9}\s\*'`
		if [ -n $line ] && [ ${#line} -gt 2 ]; then
			let nn++
			[ -n $THREE ] && no=$(dntn $nn)
			[ -z $THREE ] && no=$(printf '%02d' $nn)
#			echo -e "${WH}${no}]${NC}  $line"
			

			textlines+="$line
"
		fi
	done
	echo -e "$textlines"
}

find_titles "$1"

