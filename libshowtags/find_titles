#!/bin/bash
# vim: ft=sh ts=4 sw=4 ai si:

declare -i DONUM=0 DONAME=0 DOTAG=0 
declare KEEP_LAST_CHAR=
declare ARTIST= ALBUM= DATE= GENRE= COMMENT=
declare PREVIEW= OPT=
declare maindir textfile= textlines="" titles="" tmpfile=''
declare -i TNUM=0 FNUM=0 DNUM=0 IDX=0
declare -a fnames
declare -a songs
declare -a skipped



dntn() {
	local ifs=$IFS
	local IFS=$IFS$'-'
	local -i dn=0
	local -i m=0 d=0 n=0 current=$1 total=0
	for d in $THREE; do
		echo $THREE
		let dn++
		for t in $(seq $d); do
			htn[$dn]=$t
		done
	done
	n=0
	dn=0
	for d in $THREE; do
		let dn++
		for tn in $(seq ${htn[$dn]}); do
			let n++		
			if [ $n -ge $current ]; then
				dt=`printf '%01d%02d' $dn $tn`
				break 2
			fi
		done
	done
	echo $dt
}


init_lines() {
	local line="" IFS=$'\n'
	local title=""
    local -i n=0
	titles=''
	for line in $textlines; do
		line="${line%%[*}"
		line="$(echo $line|tr -s \ )"
		line="$(echo $line|tr '/' '-')"

		line=$(echo "$line"|sed -r 's/^[\ |-]//')
		line=$(echo "$line"|sed -r 's/^[\ |-]//')
		line=$(echo "$line"|sed -r "s/\(?[[:digit:]]{1,3}\:[[:digit:]]{1,3}\)?//")
		line=$(echo "$line"|sed -r "s/(\ *-?\ ?[s|d][[:digit:]])?[t|s][[:digit:]]{1,3}\ *\.?\ *//")
		titles+="$line
"


	done
#	convert_array
#	n=0
#	for song in "${songs[@]}"; do
#		let n++
#		song=`echo $song|tr -d $'\t'`
#		song=`echo $song|tr -s ' '`
#		song=`echo $song|sed -nr 's/^\s*(.*)\s*$/\1/p'`
#		songs[$n]="$song"

#		titles+="$songs[$n]
#"
	echo "$titles"
}

convert_array_back() {
	local -i q=0 n=0
	local IFS=$'\n'
	titles=''
	ntitles=$1
	for song in "${songs[@]}"; do
		[ -n "$song" ] && titles+="$song
"
	done
#	echo
}



convert_array() {
	local -i q=1
	local IFS=$'\n'
	for w in $titles; do
		songs[$q]="$w"
		let q++
	done
	return
}

finish() {
  	local -i n 
    local -i fnum=$1
	local -i n=$2+1
	for titleno in $(seq $n $FNUM); do
		
		if [ -n "${songs[$titleno+n]}" ]; then
			ttl[$titleno]="${songs[$titleno+n]}"
		fi		
	done
}


optional() {
	local title2="" titles2="" char=
	local IFS=$'\n'
	local -i nn=0 nr=0 n=0
	local no=''

	convert_array
	n=0
	for song in "${songs[@]}"; do
		let n++
		song=`echo $song|tr -d $'\t'`
		song=`echo $song|tr -s ' '`
		song=`echo $song|sed -nr 's/^\s*(.*)\s*$/\1/p'`
		songs[$n]="$song"

	done

}

find_titles() {
	local -i n=0 nn=0 
	local tmpvar='' no='' IFS=$'\n'
	textfile="$1"
	
	textlines=''

	t1=`grep -c -E 't[[:digit:]]{1,3}' $textfile`
	t2=`grep -c -E '^\ *[[:digit:]]{1,3}\.?\ ?' $textfile`

	tmpvar=`grep  -E '^\ *(d[[:digit:]]{1,2})?t?[[:digit:]]+[\ -\.]?'  $textfile`
	
	tmpvar=`echo "$tmpvar"|grep -v -E "[[:digit:]]\/[[:digit:]]"`
	tmpvar=`echo "$tmpvar"|grep -v '.wav'|grep -v '.flac'|grep -v '(totals for'`
	for line in ${tmpvar}; do 
		
		
		if [ $t1 -gt  $t2 ]; then
			line=`echo "$line"|sed -r "s/^\s*(d[[:digit:]])?t[[:digit:]]{1,3}[\ \-\.]?\ *\.?\ *//"`
		else
			line=`echo "$line"|sed -nr "s/^\s*[[:digit:]]+[\.|\-]?[\s+|\-]?\-?\ ?(.*)/\1/p"`
		fi	
		

		# remove anything within square braces, and the braces		
		line=`echo "$line"|sed -r 's/\[.*\]//'`


		line=`echo "$line"|sed -r 's/^[[:digit:]]{1,3}//'`


		line=`echo "$line"|sed -r "s/\.[[:digit:]]{2,3}//"` 


		line=`echo "$line"|sed -r 's/\)//'`


		line=`echo "$line"|sed -r 's/[[:digit:]]{1,2}-[[:digit:]]{1,3}//'`

		
		line=`echo "$line"|sed -r "s/\(?[[:digit:]]{1,3}\:[[:digit:]]{1,3}\)?//"`
		

		line=`echo "$line"|sed -r 's/^d?[[:digit:]]*t[[:digit:]]*\s*\-*//'`
		# remove dash at the start of a title, spaces will take care of themselves
		line=`echo "$line"|sed -r 's/^-//'`
		# filter out md5 lines
		line=`echo "$line"|grep -Ev '[0123456789abcdef]{4,9}\s\*'`
		
		if [ -n $line ] && [ ${#line} -gt 2 ]; then
			let nn++
			[ -n $THREE ] && no=$(dntn $nn)
			[ -z $THREE ] && no=$(printf '%02d' $nn)
#			echo -e "${WH}${no}]${NC}  $line"

			textlines+="$line
"
		fi
	done
#	echo "$textlines"
}
		






find_titles "$1"
init_lines

