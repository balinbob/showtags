#!/usr/bin/env python3
# vim: set ts=4 sw=4 et ai:
#
# showart.py = display the images in a flac or mp3 file tag
# v.1 2016-06-15
# v.2 2022-04-05
# - pure python this time (no command-line calls)
# dependencies: python3-mutagen

#from PythonMagick import Image
#from tempfile import mkstemp

import os,sys
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, GdkPixbuf
from mutagen import File,id3,flac
from mutagen import MutagenError


def pic_load(fname):
    try:
        mf = File(fname)
    except MutagenError as e:
        print(e)
        sys.exit(1)
    if not mf.pictures:
        print('no embedded image!')
        sys.exit(1)
    return mf.pictures

def pic_show(pdata):
    loader = GdkPixbuf.PixbufLoader()
    loader.write(pdata)
    loader.close()
    pixbuf = loader.get_pixbuf()
    image = Gtk.Image.new_from_pixbuf(pixbuf)
    win = Gtk.Window()
    win.connect('destroy', Gtk.main_quit)
    win.add(image)
    win.show_all()
    Gtk.main()
    return

    # OLD WAY using mkstemp & ImageMagick
    # (fd, fname) = mkstemp()                 # create a temp file (probably in /tmp)
    # with open(fname, 'w+b') as f:           # open it for binary write
    #   f.write(pdata)                      # write the image data to it
    # img = Image(fname)                      # open it with imagemagick
    # img.display()                           # show it
    # os.remove(fname)                        # remove the temp file
    # return          

def myhelp(args):
    if len(args) < 2:
        print('%s: display cover art in flac, mp3 files' % args[0])
        print('%s audiofile(s)...' % args[0])
        print('GPL2 2022 Bob Allred')
        return 1
    return 0

if myhelp(sys.argv):
    sys.exit(0)
       
def main(argv):       
    for fname in argv[1:]:
        print(fname)
        ext = fname.split('.')[-1]
        if ext.lower() == 'flac':               # flac files
            try:
                picture = pic_load(fname)[0]    # load the image with mutagen
                pic_show(picture.data)          # show it
            except OSError as e:
                print('the error is: %s' % e)
                sys.exit(1)
        elif ext.lower() == 'mp3':              # mp3 files
            try:
                tags = id3.Open(fname)
                picture = tags.get('APIC:')
                if picture:
                    pic_show(picture.data)
                else:
                    print('No embedded image!')
            except OSError as e:
                print(e)
        else:
            print('not a currently supported audio filetype')
    sys.exit(0)

if __name__ == '__main__':
    sys.exit(main(sys.argv))

